(function(){"use strict";const J=self,K=new Map,F=new Map;let Y=1;const Q=8,q=t=>{const O=F.get(t);O&&(F.delete(t),F.set(t,O))},G=t=>{typeof t!="number"||Number.isNaN(t)||K.set(t,{cancelled:!1})},V=t=>{K.delete(t)},I=t=>{const O=K.get(t);O&&(O.cancelled=!0)},B=t=>{const O=K.get(t);if(O&&O.cancelled)throw new DOMException("Operation cancelled by main thread","AbortError")},j=t=>{if(t instanceof DOMException)return{name:t.name,message:t.message,stack:t.stack??void 0};if(t instanceof Error)return{name:t.name,message:t.message,stack:t.stack??void 0};if(t&&typeof t=="object"&&"message"in t){const O=typeof t.message=="string"?t.message:"Unknown error",a=typeof t.name=="string"?t.name:void 0,T=typeof t.stack=="string"?t.stack:void 0;return{name:a,message:O,stack:T}}return{message:typeof t=="string"?t:"Unknown error"}};J.addEventListener("error",t=>{const O={...j(t.error??t.message??"Unknown worker error"),details:{filename:t.filename,lineno:t.lineno,colno:t.colno}};J.postMessage({id:-1,type:"worker_internal_error",payload:O}),t.preventDefault()}),J.addEventListener("unhandledrejection",t=>{const O=j(t.reason??"Unhandled rejection in worker");J.postMessage({id:-1,type:"worker_internal_error",payload:O}),t.preventDefault()});function ee(t,O){const a={parameters:{},moleculeTypes:[],species:[],observables:[],reactions:[],reactionRules:[]},T=(r,p,c)=>{const M=(h=>{const m={92:!0,94:!0,36:!0,42:!0,43:!0,63:!0,46:!0,40:!0,41:!0,124:!0,91:!0,93:!0,123:!0,125:!0};let o="";for(let e=0;e<h.length;e++){const l=h.charCodeAt(e);m[l]&&(o+="\\"),o+=h[e]}return o})(p),E=new RegExp("^\\s*begin\\s+"+M+"\\b","i"),s=new RegExp("^\\s*end\\s+"+M+"\\b","i"),n=c.split(/\r?\n/),u=[];let w=!1;for(const h of n){B(r);const m=h.split("#")[0];if(!w){E.test(m)&&(w=!0);continue}if(s.test(m))break;u.push(h)}return u.join(`
`).trim()},R=r=>r.trim().split("#")[0].trim(),d=(r,p)=>{const c=r.trim().split(/\s+/);if(c.length===0)return{productChunk:"",rateChunk:""};const f=[];for(;c.length>0;){const E=c[c.length-1].replace(/,$/,""),s=Object.hasOwn(p,E),n=E!==""&&!Number.isNaN(parseFloat(E)),u=c.length===1&&E==="0";if(!s&&!n||u)break;f.push(E),c.pop()}return{productChunk:c.join(" ").trim(),rateChunk:f.reverse().join(" ").trim()}},k=r=>{const p=[];let c="",f=0;for(let M=0;M<r.length;M++){const E=r[M];if(E==="(")f++;else if(E===")")f--;else if(E==="+"&&f===0){c.trim()&&p.push(c.trim()),c="";continue}c+=E}return c.trim()&&p.push(c.trim()),p},z=T(t,"parameters",O);if(z)for(const r of z.split(/\r?\n/)){B(t);const p=R(r);if(p){const c=p.split(/\s+/);c.length>=2&&(a.parameters[c[0]]=parseFloat(c[1]))}}const A=T(t,"molecule types",O);if(A)for(const r of A.split(/\r?\n/)){B(t);const p=R(r);if(p){const c=p.match(/(\w+)\((.*?)\)/);if(c){const f=c[1],M=c[2].split(",").map(E=>E.trim()).filter(Boolean);a.moleculeTypes.push({name:f,components:M})}else a.moleculeTypes.push({name:p,components:[]})}}const D=T(t,"seed species",O);if(D)for(const r of D.split(/\r?\n/)){B(t);const p=R(r);if(p){const c=p.split(/\s+/),f=c.pop()??"0",M=c.join(" ");let E;f in a.parameters?E=a.parameters[f]:E=parseFloat(f),M&&!Number.isNaN(E)&&a.species.push({name:M,initialConcentration:E})}}const _=T(t,"observables",O);if(_)for(const r of _.split(/\r?\n/)){B(t);const p=R(r);if(p){const c=p.split(/\s+/);c.length>=3&&(c[0].toLowerCase()==="molecules"||c[0].toLowerCase()==="species")&&a.observables.push({name:c[1],pattern:c.slice(2).join(" ")})}}const W=T(t,"reaction rules",O);if(W){const r=[];let p="";for(const c of W.split(/\r?\n/)){B(t);const f=R(c);f&&(f.endsWith("\\")?p+=f.slice(0,-1).trim()+" ":(p+=f,r.push(p.trim()),p=""))}p.trim()&&r.push(p.trim()),r.forEach(c=>{B(t);let f=c;const M=f.match(/^[^:]+:\s*(.*)$/);M&&(f=M[1]);const E=f.includes("<->"),s=f.split(E?"<->":"->");if(s.length<2){console.warn("[Worker] Rule parsing failed - not enough parts:",c);return}const n=s[0].trim(),u=s[1].trim(),w=k(n);if(w.length===0)return;const{productChunk:h,rateChunk:m}=d(u,a.parameters);if(!m)return;const o=k(h);if(o.length===0)return;const e=m.split(",").reduce((y,S)=>(S.trim().split(/\s+/).filter(Boolean).forEach(g=>y.push(g)),y),[]);if(e.length===0)return;const l=e[0],N=e[1],b={reactants:w,products:o,rate:l,isBidirectional:E,reverseRate:E?N:void 0};a.reactionRules.push(b)})}return a.reactionRules.forEach(r=>{const p=a.parameters[r.rate]??parseFloat(r.rate);if(Number.isNaN(p)||a.reactions.push({reactants:r.reactants,products:r.products,rate:r.rate,rateConstant:p}),r.isBidirectional&&r.reverseRate){const c=a.parameters[r.reverseRate]??parseFloat(r.reverseRate);Number.isNaN(c)||a.reactions.push({reactants:r.products,products:r.reactants,rate:r.reverseRate,rateConstant:c})}}),a}function te(t,O){const a=JSON.parse(JSON.stringify(O)),T=s=>typeof s=="string"?s.trim():"",R=s=>s?s.split(",").map(n=>n.trim()).filter(n=>n.length>0):[],d=s=>s.split("~")[0].split("!")[0],k=s=>{const n=s.match(/^([^~]+)~(.+)$/);if(n){const u=n[1],w=n[2].split("~")[0];return`${u}~${w}`}return s},z=s=>{if(s.includes("."))return s.split(".").map(o=>z(o.trim())).join(".");const n=s.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(!n){const o=a.moleculeTypes.find(e=>e.name===s);if(o&&o.components.length>0){const e=o.components.map(k);return`${s}(${e.join(",")})`}return s}const u=n[1],w=n[2].split(",").map(o=>o.trim()).filter(Boolean),h=a.moleculeTypes.find(o=>o.name===u);if(!h)return s;const m=[];return h.components.forEach(o=>{const e=d(o),l=w.find(N=>d(N)===e);l?m.push(l):m.push(k(o))}),w.forEach(o=>{const e=d(o);m.some(l=>d(l)===e)||m.push(o)}),`${u}(${m.join(",")})`},A=(s,n)=>{if(s===n)return!0;const u=(m,o)=>{const e=m.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/),l=o.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(!e||!l)return m===o;if(e[1]!==l[1])return!1;const N=R(e[2]),b=R(l[2]);return N.every(y=>{const S=d(y);return b.some(g=>{const x=d(g);return S!==x?!1:y.includes("~")||y.includes("!")?y===g:!g.includes("!")})})},w=s.includes("."),h=n.includes(".");if(w){const m=s.split(".").map(e=>T(e));if(!h)return!1;const o=n.split(".").map(e=>T(e));if(m.length!==o.length)return!1;for(let e=0;e<m.length;e+=1)if(!u(m[e],o[e]))return!1;return!0}return h?n.split(".").map(o=>T(o)).some(o=>u(s,o)):u(s,n)},D=(s,n)=>{if(!s||!n||n.includes("."))return null;const u=n.match(/^([A-Za-z0-9_]+)\(([^)]*)\)$/);if(!u)return null;const w=u[1],h=R(u[2]),m=s.split(".").map(l=>T(l));let o=!1;const e=m.map(l=>{const N=l.match(/^([A-Za-z0-9_]+)\(([^)]*)\)$/);if(!N||N[1]!==w)return l;const b=R(N[2]),y={};b.forEach(g=>{y[d(g)]=g}),h.forEach(g=>{y[d(g)]=g});const S=[];return b.forEach(g=>{const x=d(g);Object.prototype.hasOwnProperty.call(y,x)?(S.push(y[x]),delete y[x]):S.push(g)}),Object.keys(y).forEach(g=>{S.push(y[g])}),o=!0,`${w}(${S.join(",")})`});return o?e.join("."):null},_=(s,n=0,u=[])=>{if(n===s.length)return[u];const w=[],h=s[n]??[];for(let m=0;m<h.length;m+=1){const o=h[m],e=u.concat([o]),l=_(s,n+1,e);for(let N=0;N<l.length;N+=1)w.push(l[N])}return w},W=JSON.parse(JSON.stringify(a.reactions)),r=new Map(a.species.map(s=>[s.name,{...s}])),p=new Map;let c=!0;for(;c;){B(t),c=!1;const s=Array.from(r.values());for(const n of W){B(t);const u=n.reactants.map(h=>{const m=s.filter(o=>A(h,o.name));return m.length===0&&(h.includes("!")||h.includes("."))?[{name:h,initialConcentration:0}]:m});if(u.some(h=>h.length===0))continue;_(u).forEach(h=>{B(t);const m={reactants:h.map(e=>e.name),products:n.products.map(e=>{if(n.reactants.length===1&&n.products.length===1&&h.length===1){const l=D(h[0].name,e);if(l)return l}return e.includes("(")?e.split(".").map(b=>{const y=b.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(!y)return b;const S=y[1],g=y[2];let x=h.find(i=>i.name.startsWith(`${S}(`));if(!x){for(const i of h)if(i.name.includes(".")){const C=i.name.split(".").find($=>$.startsWith(`${S}(`));if(C){x={name:C,initialConcentration:i.initialConcentration};break}}}if(x){const i=x.name.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(i){const v=i[2].split(",").map(L=>L.trim()).filter(Boolean),C=g.split(",").map(L=>L.trim()).filter(Boolean),$=L=>L.split("~")[0].split("!")[0],Z=C.slice(),H=C.reduce((L,U)=>(L[$(U)]=U,L),{});return v.forEach(L=>{const U=$(L);Object.prototype.hasOwnProperty.call(H,U)||Z.some(X=>$(X)===U)||Z.push(L)}),`${S}(${Z.join(",")})`}}return b}).join("."):e}),rate:n.rate,rateConstant:n.rateConstant},o=JSON.stringify({reactants:m.reactants,products:m.products,rate:m.rate,rateConstant:m.rateConstant});p.has(o)||p.set(o,m),m.products.forEach(e=>{const l=z(e);r.has(l)||(r.set(l,{name:l,initialConcentration:0}),c=!0)})})}}a.reactions=Array.from(p.values()),a.species=Array.from(r.values());const f=a.species.map(s=>s.name);for(const s of a.reactions)B(t),s.reactants=s.reactants.map(n=>{const u=z(n);if(f.includes(u))return u;if(f.includes(n))return n;const w=f.find(h=>A(u,h)||A(n,h));return w&&w!==n?w:u!==n?u:n}),s.products=s.products.map(n=>{if(f.includes(n))return n;const u=f.find(w=>A(n,w));return u&&u!==n?u:n});const M=new Set;for(const s of a.reactions)B(t),s.products.forEach(n=>{const u=z(n);M.add(u),s.products=s.products.map(w=>w===n?u:w)});const E=new Set(a.species.map(s=>s.name));for(const s of M)B(t),E.has(s)||(a.species.push({name:s,initialConcentration:0}),E.add(s));return a}function se(t,O,a){B(t);const T=te(t,O),R=JSON.parse(JSON.stringify(T)),{t_end:d,n_steps:k,method:z}=a,A=R.species.map(r=>r.name),D=["time",...R.observables.map(r=>r.name)],_=r=>{B(t);const p={};for(const c of R.observables){B(t);let f=0;const M=c.pattern.trim();for(const[E,s]of Object.entries(r)){B(t);const n=E.trim();if(n===M){f+=s;continue}if(M.includes("!+")){const u=M.match(/^([A-Za-z0-9_]+)\(([^)]+)\)/);if(u){const w=u[1],m=u[2].split("!")[0];if(n.includes(`${w}(`)){const o=new RegExp(`${w}\\(([^)]*)\\)`),e=n.match(o);if(e){const l=e[1];new RegExp(`${m}!`).test(l)&&(f+=s)}}}continue}if(M.includes("!")&&!M.includes("!+")){n===M&&(f+=s);continue}if(M.includes("(")){const u=M.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(u){const w=u[1],h=u[2].trim();if(n.includes(`${w}(`)){const m=new RegExp(`${w}\\(([^)]*)\\)`),o=n.match(m);if(o){const e=o[1].split(",").map(b=>b.trim()).filter(Boolean),l=h?h.split(",").map(b=>b.trim()).filter(Boolean):[];(l.every(b=>{const y=b.split("~")[0].split("!")[0],S=b.includes("~")?b.split("~")[1].split("!")[0]:null,g=b.includes("!")?b.split("!")[1]:null,x=b.length>0&&!b.includes("!")&&!b.includes("~");return e.some(i=>!(i.split("~")[0].split("!")[0]!==y||S&&!i.includes(`~${S}`)||x&&i.includes("!")||g&&!i.includes(`!${g}`)))})||l.length===0)&&(f+=s)}}}}else n===M&&(f+=s)}p[c.name]=f}return p},W=[];if(z==="ssa"){let r=Object.fromEntries(R.species.map(M=>[M.name,Math.round(M.initialConcentration)]));const p=d/k;let c=0,f=0;for(W.push({time:c,..._(r)});c<d;){B(t);const M=[];for(const o of R.reactions){B(t);let e=o.rateConstant;for(const l of o.reactants){const N=r[l];N===void 0&&console.warn("[SSA] Missing reactant in counts:",l,"Available:",Object.keys(r)),e*=N||0}M.push(e)}const E=M.reduce((o,e)=>o+e,0);if(E===0)break;const s=Math.random(),n=1/E*Math.log(1/s);c+=n;const u=Math.random()*E;let w=0,h=M.length-1;for(let o=0;o<M.length;o+=1)if(B(t),w+=M[o],u<=w){h=o;break}const m=R.reactions[h];for(const o of m.reactants){const e=r[o]||0;r[o]=e-1}for(const o of m.products){const e=r[o]||0;r[o]=e+1}for(;c>=f&&f<=d;)B(t),W.push({time:Math.round(f*1e10)/1e10,..._(r)}),f+=p}for(;f<=d;)B(t),W.push({time:Math.round(f*1e10)/1e10,..._(r)}),f+=p;return{headers:D,data:W}}if(z==="ode"){let r=R.species.map(e=>e.initialConcentration);const p=()=>B(t),c=(e,l)=>{if(p(),e===l)return!0;const N=i=>i.split(",").map(v=>v.trim()).filter(Boolean),b=i=>i.split("~")[0].split("!")[0],y=i=>i.trim(),S=(i,v)=>{const C=i.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/),$=v.match(/^([A-Za-z0-9_]+)\(([^)]*)\)/);if(!C||!$)return i===v;if(C[1]!==$[1])return!1;const Z=N(C[2]),H=N($[2]);return Z.every(L=>{const U=b(L);return H.some(P=>{const X=b(P);return U!==X?!1:L.includes("~")||L.includes("!")?L===P:!P.includes("!")})})},g=e.includes("."),x=l.includes(".");if(g){const i=e.split(".").map(C=>y(C));if(!x)return!1;const v=l.split(".").map(C=>y(C));if(i.length!==v.length)return!1;for(let C=0;C<i.length;C+=1)if(!S(i[C],v[C]))return!1;return!0}return x?l.split(".").map(v=>y(v)).some(v=>S(e,v)):S(e,l)},f=(e,l)=>{p();const N={};A.forEach((y,S)=>{N[y]=e[S]});const b=new Array(A.length).fill(0);return R.reactions.forEach(y=>{if(p(),y.reactants.every(g=>A.includes(g))){let g=y.rateConstant;y.reactants.forEach(x=>{g*=N[x]||0}),y.reactants.forEach(x=>{const i=A.indexOf(x);i!==-1&&(b[i]-=g)}),y.products.forEach(x=>{const i=A.indexOf(x);if(i!==-1)b[i]+=g;else for(let v=0;v<A.length;v+=1)if(c(x,A[v])){b[v]+=g;break}})}else{const g=y.reactants.map(i=>{const v=[];return A.forEach((C,$)=>{c(i,C)&&v.push({name:C,idx:$})}),v});if(!g.every(i=>i.length===1))return;let x=y.rateConstant;if(g.forEach(i=>{x*=N[i[0].name]||0}),x===0)return;g.forEach(i=>{b[i[0].idx]-=x}),y.products.forEach(i=>{const v=A.indexOf(i);if(v!==-1)b[v]+=x;else for(let C=0;C<A.length;C+=1)if(c(i,A[C])){b[C]+=x;break}})}}),b},M=(e,l,N)=>{p();const b=f(e),y=e.map(($,Z)=>$+.5*l*b[Z]),S=f(y),g=e.map(($,Z)=>$+.5*l*S[Z]),x=f(g),i=e.map(($,Z)=>$+l*x[Z]),v=f(i);return e.map(($,Z)=>$+l/6*(b[Z]+2*S[Z]+2*x[Z]+v[Z])).map($=>Math.max(0,$))},E=d/k;let s=0;const n={};A.forEach((e,l)=>{n[e]=r[l]}),W.push({time:s,..._(n)});const u=a.steadyStateTolerance??1e-6,w=a.steadyStateWindow??5,h=!!a.steadyState;let m=0,o=!1;for(let e=1;e<=k&&!o;e+=1){p();const l=e*E,N=R.reactions.reduce((i,v)=>Math.max(i,v.rateConstant||0),0),b=Math.max(1,N*100),y=Math.max(10,Math.ceil(E*10*b)),S=(l-s)/y;let g=s;for(;g<l-1e-12;){p();let i=Math.min(S,l-g),v=0,C=null;const $=12,Z=1e12;for(;v<$;){p();const L=M(r,i);if(!L.some(P=>!Number.isFinite(P)||Math.abs(P)>Z)){C=L;break}if(i/=2,v+=1,i<1e-12)break}if(!C)throw new Error("Simulation became unstable (adaptive RK4 step failed). Try adjusting parameters or using the SSA solver.");const H=Math.max(...C.map((L,U)=>Math.abs(L-r[U])));if(r=C,g+=i,h)if(H<=u){if(m+=1,m>=w){o=!0;break}}else m=0}s=g;const x={};if(A.forEach((i,v)=>{x[i]=r[v]}),W.push({time:Math.round(s*1e10)/1e10,..._(x)}),o)break}return{headers:D,data:W}}throw new Error(`Unsupported simulation method: ${z}`)}J.addEventListener("message",t=>{const O=t.data;if(!O||typeof O!="object"){console.warn("[Worker] Received malformed message",O);return}const{id:a,type:T,payload:R}=O;if(typeof a!="number"||typeof T!="string"){console.warn("[Worker] Missing id or type on message",O);return}if(T==="cancel"){const d=R&&typeof R=="object"?R.targetId:void 0;typeof d=="number"&&I(d);return}if(T==="parse"){G(a);try{const k=ee(a,typeof R=="string"?R:""),z={id:a,type:"parse_success",payload:k};J.postMessage(z)}catch(d){const k={id:a,type:"parse_error",payload:j(d)};J.postMessage(k)}finally{V(a)}return}if(T==="simulate"){G(a);try{if(!R||typeof R!="object")throw new Error("Simulation payload missing");const d=R;let k;const z=d.options;if(d.model)k=d.model;else if(typeof d.modelId=="number"){const _=F.get(d.modelId);if(!_)throw new Error("Cached model not found in worker");if(q(d.modelId),!d.parameterOverrides||Object.keys(d.parameterOverrides).length===0)k=_;else{const W=d.parameterOverrides,r={..._,parameters:{..._.parameters||{},...W},reactions:[]};(_.reactions||[]).forEach(p=>{const c=r.parameters[p.rate]??parseFloat(p.rate);r.reactions.push({...p,rateConstant:c})}),k=r}}if(!k||!z)throw new Error("Simulation payload incomplete");const A=se(a,k,z),D={id:a,type:"simulate_success",payload:A};J.postMessage(D)}catch(d){const k={id:a,type:"simulate_error",payload:j(d)};J.postMessage(k)}finally{V(a)}return}if(T==="cache_model"){G(a);try{const d=R,k=d&&d.model?d.model:void 0;if(!k)throw new Error("Cache model payload missing");const z=Y++,A={...k,parameters:{...k.parameters||{}},moleculeTypes:(k.moleculeTypes||[]).map(_=>({..._})),species:(k.species||[]).map(_=>({..._})),observables:(k.observables||[]).map(_=>({..._})),reactions:(k.reactions||[]).map(_=>({..._})),reactionRules:(k.reactionRules||[]).map(_=>({..._}))};F.set(z,A);try{if(F.size>Q){const W=F.keys().next().value;typeof W=="number"&&(F.delete(W),console.warn("[Worker] Evicted cached model (LRU) id=",W))}}catch{}const D={id:a,type:"cache_model_success",payload:{modelId:z}};J.postMessage(D)}catch(d){const k={id:a,type:"cache_model_error",payload:j(d)};J.postMessage(k)}finally{V(a)}return}if(T==="release_model"){G(a);try{const d=R,k=d&&typeof d=="object"?d.modelId:void 0;if(typeof k!="number")throw new Error("release_model payload missing modelId");const z=F.delete(k),A={id:a,type:"release_model_success",payload:{modelId:k}};J.postMessage(A)}catch(d){const k={id:a,type:"release_model_error",payload:j(d)};J.postMessage(k)}finally{V(a)}return}console.warn("[Worker] Unknown message type received:",T)})})();
